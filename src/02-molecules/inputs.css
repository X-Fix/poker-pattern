/* Text Input */
.text-input {
    display: block;
}

.text-input__label {
    margin: 0 0 $spacing-sm;
}

.text-input__text {
    background-color: $color-neutral-0;
    border: 0.0625rem solid $color-neutral-200;
    border-radius: 0.125rem;
    box-shadow: $shadow-tertiary;
    box-sizing: border-box;
    color: $color-neutral-900;
    height: 3rem;
    /* Placeholder text won't vertically align middle on Firefox so have to go with this weird top/bottom padding */
    padding: 0.75rem $spacing-md;
    text-align: left;
    width: 20.5rem;
}

.text-input__text:hover,
.text-input__text:focus {
    border-color: $color-blue-800;
}

.text-input__text::placeholder {
    color: $color-neutral-200;
    margin: 0;
}

.text-input__label,
.text-input__text,
.text-input__text::placeholder {
    font-size: $font-size-title;
    line-height: $font-size-title;
}

/* Radio */
.radio-input {
    align-items: center;
    cursor: pointer;
    display: flex;
    margin-bottom: $spacing-sm;
}

.radio-input__radio {
    /*
    Make the span element large enough to contain the pseudo-elements so the :focus outline
    surrounds everything. Center the children to make translating the pseudo-elements easier
    */
    align-items: center;
    display: flex;
    height: 1.5rem;
    justify-content: center;
    margin-right: $spacing-sm;
    width: 1.5rem;
}

.radio-input > input[type='radio']:focus + .radio-input__radio {
    /* Copy default outline behavior to the custom radio */
    /* https://ghinda.net/article/mimic-native-focus-css/ */
    outline-width: 0.1875rem;
    outline-color: Highlight;
    outline-color: -webkit-focus-ring-color;
    outline-style: auto;
}

.radio-input__radio:before {
    background: $color-neutral-0;
    border: 0.0625rem solid $color-blue-800;
    border-radius: 50%;
    box-shadow: $shadow-tertiary;
    box-sizing: border-box;
    content: '';
    display: block;
    height: 1.5rem;
    width: 1.5rem;
}

.radio-input > input[type='radio']:checked + .radio-input__radio:before {
    background: $color-blue-800;
    border: none;
    /* Only animate on the way in */
    transition: all 0.15s cubic-bezier(0.4, 0, 0.6, 1);
}

.radio-input__radio:after {
    background: $color-neutral-0;
    border-radius: 50%;
    content: '';
    display: block;
    filter: drop-shadow($shadow-primary);
    height: 0.75rem;
    opacity: 0;
    position: absolute;
    width: 0.75rem;
}

.radio-input > input[type='radio']:checked + .radio-input__radio:after {
    opacity: 1;
    /* Only animate on the way in */
    transition: all 0.15s cubic-bezier(0.4, 0, 0.6, 1);
}

.radio-input__label {
    font-size: $font-size-body;
    height: $font-size-body;
    line-height: $font-size-body;
    margin: 0;
}

/* Switch */
.switch-input {
    align-items: center;
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    position: relative; /* Allow 'position: absolute' children to scroll with this element */
    width: 100%;
}

.switch-input__label {
    font-size: $font-size-body;
    height: $font-size-body;
    line-height: $font-size-body;
    margin: 0;
}

.switch-input__switch {
    /*
    Make the span element large enough to contain the pseudo-elements so the :focus outline
    surrounds everything. Center the children to make translating the pseudo-elements easier
    */
    align-items: center;
    display: flex;
    height: 1.5rem;
    justify-content: center;
    width: 3rem;
}

.switch-input__switch:before {
    background-color: $color-neutral-300;
    border-radius: 0.375rem;
    content: '';
    display: block;
    height: 0.75rem;
    transition: all 0.15s cubic-bezier(0.4, 0, 0.6, 1);
    width: 2.5rem;
}

.switch-input > input[type='checkbox']:checked + .switch-input__switch:before {
    background-color: $color-blue-700;
}

.switch-input > input[type='checkbox']:focus + .switch-input__switch {
    /* Copy default outline behavior to the custom switch */
    /* https://ghinda.net/article/mimic-native-focus-css/ */
    outline-width: 0.1875rem;
    outline-color: Highlight;
    outline-color: -webkit-focus-ring-color;
    outline-style: auto;
}

.switch-input__switch:after {
    background-color: $color-neutral-0;
    border-radius: 50%;
    box-shadow: $shadow-secondary;
    content: '';
    height: 1.5rem;
    position: absolute;
    transform: translateX(-0.75rem);
    transition: all 0.15s cubic-bezier(0.4, 0, 0.6, 1);
    width: 1.5rem;
}

.switch-input > input[type='checkbox']:checked + .switch-input__switch:after {
    background-color: $color-blue-800;
    transform: translateX(0.75rem);
}
